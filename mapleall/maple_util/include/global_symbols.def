/*
 * Copyright (c) [2020] Huawei Technologies Co.,Ltd.All rights reserved.
 *
 * OpenArkCompiler is licensed under the Mulan PSL v1.
 * You can use this software according to the terms and conditions of the Mulan PSL v1.
 * You may obtain a copy of Mulan PSL v1 at:
 *
 *     http://license.coscl.org.cn/MulanPSL
 *
 * THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
 * FIT FOR A PARTICULAR PURPOSE.
 * See the Mulan PSL v1 for more details.
 */

	CLASS_PREFIX(string(NameMangler::kJavaLangBoolean))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kByte))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kCharacter))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kShort))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kInteger))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kLong))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kFloat))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kDouble))
	CLASS_PREFIX(string(NameMangler::kJavaIo) + string(NameMangler::kFile))
	CLASS_PREFIX(string(NameMangler::kJavaLangStringStr))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kAnnotationAnnotation))
	CLASS_PREFIX(string(NameMangler::kJavaLangReflectMethod))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kRefReference))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kRefWeakReference))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kRefFinalizeReference))
	CLASS_PREFIX(string(NameMangler::kJavaUtilFormatterFlags))
	CLASS_PREFIX(string(NameMangler::kJavaLang) + string(NameMangler::kSimpleTimeZone))
