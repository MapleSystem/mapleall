#
# Copyright (c) [2020] Huawei Technologies Co., Ltd. All rights reserved.
#
# Licensed under the Mulan Permissive Software License v2.
# You can use this software according to the terms and conditions of the MulanPSL - 2.0.
# You may obtain a copy of MulanPSL - 2.0 at:
#
#     https://opensource.org/licenses/MulanPSL-2.0
#
# THIS SOFTWARE IS PROVIDED ON AN "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, EITHER
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO NON-INFRINGEMENT, MERCHANTABILITY OR
# FIT FOR A PARTICULAR PURPOSE.
# See the MulanPSL - 2.0 for more details.
#

configs = [
        "${MAPLEALL_ROOT}:mapleallcompilecfg",
    ]

cflags_cc += [
    "-DSTORE_BACK_VTABLE_REF_AFTER_LOAD=1",
#    "-Wc++14-extensions",
]

include_directories = [
    "${MAPLEALL_ROOT}/maple_ir/include",
    "${MAPLEALL_ROOT}/mpl2mpl/include",
    "${MAPLEALL_ROOT}/maple_util/include",
    "${MAPLEALL_ROOT}/mempool/include",
    "${HUAWEI_SECURE_C_ROOT}/include",
    "${MAPLEALL_ROOT}/maple_ipa/include",
    "${MAPLEALL_ROOT}/maple_me/include",
    "${MAPLEALL_ROOT}/maple_phase/include",
    "${MAPLEALL_ROOT}/maple_driver/include",
    "${DWARF_ROOT}/include",
]

static_library("libmplir"){
    sources = [
       "src/constant_fold.cpp",
       "src/debug_info.cpp",
       "src/debug_info_util.cpp",
       "src/global_tables.cpp",
       "src/intrinsics.cpp",
       "src/lexer.cpp",
       "src/mir_builder.cpp",
       "src/mir_symbol_builder.cpp",
       "src/mir_const.cpp",
       "src/mir_function.cpp",
       "src/mir_lower.cpp",
       "src/mir_module.cpp",
       "src/mir_nodes.cpp",
       "src/mir_symbol.cpp",
       "src/mir_type.cpp",
       "src/opcode_info.cpp",
       "src/option.cpp",
       "src/parser.cpp",
       "src/mir_parser_stmt.cpp",
       "src/mir_parser_expr.cpp",
       "src/mir_pragma.cpp",
       "src/printing.cpp",
       "src/bin_mpl_import.cpp",
       "src/bin_mpl_export.cpp",
       "src/bin_func_export.cpp",
       "src/bin_func_import.cpp",
    ]

    include_dirs = include_directories

    output_dir = "${root_out_dir}/lib/${HOST_ARCH}"

    deps = [
      "${MAPLEALL_ROOT}/maple_driver:liboption_parser",
    ]

}

executable("irbuild"){
    sources = [
        "src/irbuild.cpp"
    ]

    include_dirs = include_directories

    deps = [
        ":libmplir",
        "${MAPLEALL_ROOT}/mempool:libmempool",
        "${MAPLEALL_ROOT}/maple_util:libmplutil",
        "${HUAWEI_SECURE_C_ROOT}:libHWSecureC",
    ]
}

executable("mmpl2cmpl"){
    sources = [
        "src/cmpl_gen.cpp",
        "src/mmpl_to_cmpl.cpp"
    ]

    include_dirs = include_directories

    deps = [
        ":libmplir",
        "${MAPLEALL_ROOT}/mempool:libmempool",
        "${MAPLEALL_ROOT}/maple_util:libmplutil",
        "${HUAWEI_SECURE_C_ROOT}:libHWSecureC",
    ]
}

executable("cmpl2mmpl"){
    sources = [
        "src/cmpl.cpp",
        "src/cmpl_to_mmpl.cpp"
    ]

    include_dirs = include_directories

    deps = [
        ":libmplir",
        "${MAPLEALL_ROOT}/mempool:libmempool",
        "${MAPLEALL_ROOT}/maple_util:libmplutil",
        "${HUAWEI_SECURE_C_ROOT}:libHWSecureC",
    ]
}

executable("mpldbg"){
    sources = [
        "src/mpl_dbg.cpp"
    ]

    include_dirs = include_directories

    deps = [
        ":libmplir",
        "${MAPLEALL_ROOT}/mempool:libmempool",
        "${MAPLEALL_ROOT}/maple_util:libmplutil",
        "${HUAWEI_SECURE_C_ROOT}:libHWSecureC",
    ]
}

executable("mplverf"){
    sources = [
        "src/verf_driver.cpp",
    ]

    include_dirs = include_directories

    deps = [
        ":libmplir",
        "${MAPLEALL_ROOT}/mempool:libmempool",
        "${MAPLEALL_ROOT}/maple_util:libmplutil",
        "${HUAWEI_SECURE_C_ROOT}:libHWSecureC",
    ]
}
